var g_data = {"name":"/shark0/processing/cv32e40p/users/processing/PRODUCTS_DIGITAL_DESIGN/PANTHER/PANTHER_1.0/CV32/NR/CFG_P_Z0/NR_QUESTA_INT_DEBUG_LONG/workdir/core-v-cores/cv32e40p/rtl/../bhv/cv32e40p_tb_wrapper.sv","src":"// Copyright 2024 Dolphin Design\n// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1\n//\n// Licensed under the Solderpad Hardware License v 2.1 (the \"License\");\n// you may not use this file except in compliance with the License, or,\n// at your option, the Apache License version 2.0.\n// You may obtain a copy of the License at\n//\n// https://solderpad.org/licenses/SHL-2.1/\n//\n// Unless required by applicable law or agreed to in writing, any work\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n////////////////////////////////////////////////////////////////////////////////////\n//                                                                                //\n// Contributors: Davide Schiavone, OpenHW Group <davide@openhwgroup.org>          //\n//               Yoann Pruvost, Dolphin Design <yoann.pruvost@dolphin.fr>         //\n//                                                                                //\n// Description:  Test-bench wrapper for cv32e40p_top, tracer and and rvfi_tracer  //\n//                                                                                //\n////////////////////////////////////////////////////////////////////////////////////\n\n`ifdef CV32E40P_ASSERT_ON\n`include \"cv32e40p_prefetch_controller_sva.sv\"\n`endif\n\n`ifdef CV32E40P_CORE_LOG\n`include \"cv32e40p_core_log.sv\"\n`endif\n\n`ifdef CV32E40P_APU_TRACE\n`include \"cv32e40p_apu_tracer.sv\"\n`endif\n\n`ifdef CV32E40P_TRACE_EXECUTION\n`include \"cv32e40p_tracer.sv\"\n`endif\n\n`ifdef CV32E40P_RVFI\n`include \"cv32e40p_rvfi.sv\"\n`endif\n\n`ifdef CV32E40P_RVFI_TRACE_EXECUTION\n`include \"cv32e40p_rvfi_trace.sv\"\n`endif\n\nmodule cv32e40p_tb_wrapper\n  import cv32e40p_pkg::*;\n#(\n    parameter COREV_PULP = 0, // PULP ISA Extension (incl. custom CSRs and hardware loop, excl. cv.elw)\n    parameter COREV_CLUSTER = 0,  // PULP Cluster interface (incl. cv.elw)\n    parameter FPU = 0,  // Floating Point Unit (interfaced via APU interface)\n    parameter FPU_ADDMUL_LAT = 0,  // Floating-Point ADDition/MULtiplication computing lane pipeline registers number\n    parameter FPU_OTHERS_LAT = 0,  // Floating-Point COMParison/CONVersion computing lanes pipeline registers number\n    parameter ZFINX = 0,  // Float-in-General Purpose registers\n    parameter NUM_MHPMCOUNTERS = 1\n) (\n    // Clock and Reset\n    input logic clk_i,\n    input logic rst_ni,\n\n    input logic pulp_clock_en_i,  // PULP clock enable (only used if COREV_CLUSTER = 1)\n    input logic scan_cg_en_i,  // Enable all clock gates for testing\n\n    // Core ID, Cluster ID, debug mode halt address and boot address are considered more or less static\n    input logic [31:0] boot_addr_i,\n    input logic [31:0] mtvec_addr_i,\n    input logic [31:0] dm_halt_addr_i,\n    input logic [31:0] hart_id_i,\n    input logic [31:0] dm_exception_addr_i,\n\n    // Instruction memory interface\n    output logic        instr_req_o,\n    input  logic        instr_gnt_i,\n    input  logic        instr_rvalid_i,\n    output logic [31:0] instr_addr_o,\n    input  logic [31:0] instr_rdata_i,\n\n    // Data memory interface\n    output logic        data_req_o,\n    input  logic        data_gnt_i,\n    input  logic        data_rvalid_i,\n    output logic        data_we_o,\n    output logic [ 3:0] data_be_o,\n    output logic [31:0] data_addr_o,\n    output logic [31:0] data_wdata_o,\n    input  logic [31:0] data_rdata_i,\n\n    // Interrupt inputs\n    input  logic [31:0] irq_i,  // CLINT interrupts + CLINT extension interrupts\n    output logic        irq_ack_o,\n    output logic [ 4:0] irq_id_o,\n\n    // Debug Interface\n    input  logic debug_req_i,\n    output logic debug_havereset_o,\n    output logic debug_running_o,\n    output logic debug_halted_o,\n\n    // CPU Control Signals\n    input  logic fetch_enable_i,\n    output logic core_sleep_o\n);\n\n`ifdef CV32E40P_ASSERT_ON\n\n  // RTL Assertions\n  bind cv32e40p_prefetch_controller:\n      cv32e40p_top_i.core_i.if_stage_i.prefetch_buffer_i.prefetch_controller_i\n      cv32e40p_prefetch_controller_sva\n      #(\n      .DEPTH          (DEPTH),\n      .COREV_PULP     (COREV_PULP),\n      .PULP_OBI       (PULP_OBI),\n      .FIFO_ADDR_DEPTH(FIFO_ADDR_DEPTH)\n  ) prefetch_controller_sva (.*);\n\n`endif  // CV32E40P_ASSERT_ON\n\n`ifdef CV32E40P_CORE_LOG\n  cv32e40p_core_log #(\n      .COREV_PULP      (COREV_PULP),\n      .COREV_CLUSTER   (COREV_CLUSTER),\n      .FPU             (FPU),\n      .ZFINX           (ZFINX),\n      .NUM_MHPMCOUNTERS(NUM_MHPMCOUNTERS)\n  ) core_log_i (\n      .clk_i             (cv32e40p_top_i.core_i.id_stage_i.clk),\n      .is_decoding_i     (cv32e40p_top_i.core_i.id_stage_i.is_decoding_o),\n      .illegal_insn_dec_i(cv32e40p_top_i.core_i.id_stage_i.illegal_insn_dec),\n      .hart_id_i         (cv32e40p_top_i.core_i.hart_id_i),\n      .pc_id_i           (cv32e40p_top_i.core_i.pc_id)\n  );\n`endif  // CV32E40P_CORE_LOG\n\n`ifdef CV32E40P_APU_TRACE\n  cv32e40p_apu_tracer apu_tracer_i (\n      .clk_i       (cv32e40p_top_i.core_i.rst_ni),\n      .rst_n       (cv32e40p_top_i.core_i.clk_i),\n      .hart_id_i   (cv32e40p_top_i.core_i.hart_id_i),\n      .apu_valid_i (cv32e40p_top_i.core_i.ex_stage_i.apu_valid),\n      .apu_waddr_i (cv32e40p_top_i.core_i.ex_stage_i.apu_waddr),\n      .apu_result_i(cv32e40p_top_i.core_i.ex_stage_i.apu_result)\n  );\n`endif\n\n`ifdef CV32E40P_TRACE_EXECUTION\n  cv32e40p_tracer #(\n      .FPU  (FPU),\n      .ZFINX(ZFINX)\n  ) tracer_i (\n      .clk_i(cv32e40p_top_i.core_i.clk_i),  // always-running clock for tracing\n      .rst_n(cv32e40p_top_i.core_i.rst_ni),\n\n      .hart_id_i(cv32e40p_top_i.core_i.hart_id_i),\n\n      .pc                (cv32e40p_top_i.core_i.id_stage_i.pc_id_i),\n      .instr             (cv32e40p_top_i.core_i.id_stage_i.instr),\n      .controller_state_i(cv32e40p_top_i.core_i.id_stage_i.controller_i.ctrl_fsm_cs),\n      .compressed        (cv32e40p_top_i.core_i.id_stage_i.is_compressed_i),\n      .id_valid          (cv32e40p_top_i.core_i.id_stage_i.id_valid_o),\n      .is_decoding       (cv32e40p_top_i.core_i.id_stage_i.is_decoding_o),\n      .is_illegal        (cv32e40p_top_i.core_i.id_stage_i.illegal_insn_dec),\n      .trigger_match     (cv32e40p_top_i.core_i.id_stage_i.trigger_match_i),\n      .rs1_value         (cv32e40p_top_i.core_i.id_stage_i.operand_a_fw_id),\n      .rs2_value         (cv32e40p_top_i.core_i.id_stage_i.operand_b_fw_id),\n      .rs3_value         (cv32e40p_top_i.core_i.id_stage_i.alu_operand_c),\n      .rs2_value_vec     (cv32e40p_top_i.core_i.id_stage_i.alu_operand_b),\n\n      .rs1_is_fp(cv32e40p_top_i.core_i.id_stage_i.regfile_fp_a),\n      .rs2_is_fp(cv32e40p_top_i.core_i.id_stage_i.regfile_fp_b),\n      .rs3_is_fp(cv32e40p_top_i.core_i.id_stage_i.regfile_fp_c),\n      .rd_is_fp (cv32e40p_top_i.core_i.id_stage_i.regfile_fp_d),\n\n      .ex_valid    (cv32e40p_top_i.core_i.ex_valid),\n      .ex_reg_addr (cv32e40p_top_i.core_i.regfile_alu_waddr_fw),\n      .ex_reg_we   (cv32e40p_top_i.core_i.regfile_alu_we_fw),\n      .ex_reg_wdata(cv32e40p_top_i.core_i.regfile_alu_wdata_fw),\n\n      .ex_data_addr   (cv32e40p_top_i.core_i.data_addr_o),\n      .ex_data_req    (cv32e40p_top_i.core_i.data_req_o),\n      .ex_data_gnt    (cv32e40p_top_i.core_i.data_gnt_i),\n      .ex_data_we     (cv32e40p_top_i.core_i.data_we_o),\n      .ex_data_wdata  (cv32e40p_top_i.core_i.data_wdata_o),\n      .data_misaligned(cv32e40p_top_i.core_i.data_misaligned),\n\n      .ebrk_insn(cv32e40p_top_i.core_i.id_stage_i.ebrk_insn_dec),\n      .debug_mode(cv32e40p_top_i.core_i.debug_mode),\n      .ebrk_force_debug_mode(cv32e40p_top_i.core_i.id_stage_i.controller_i.ebrk_force_debug_mode),\n\n      .wb_bypass(cv32e40p_top_i.core_i.ex_stage_i.branch_in_ex_i),\n\n      .wb_valid    (cv32e40p_top_i.core_i.wb_valid),\n      .wb_reg_addr (cv32e40p_top_i.core_i.regfile_waddr_fw_wb_o),\n      .wb_reg_we   (cv32e40p_top_i.core_i.regfile_we_wb),\n      .wb_reg_wdata(cv32e40p_top_i.core_i.regfile_wdata),\n\n      .imm_u_type       (cv32e40p_top_i.core_i.id_stage_i.imm_u_type),\n      .imm_uj_type      (cv32e40p_top_i.core_i.id_stage_i.imm_uj_type),\n      .imm_i_type       (cv32e40p_top_i.core_i.id_stage_i.imm_i_type),\n      .imm_iz_type      (cv32e40p_top_i.core_i.id_stage_i.imm_iz_type[11:0]),\n      .imm_z_type       (cv32e40p_top_i.core_i.id_stage_i.imm_z_type),\n      .imm_s_type       (cv32e40p_top_i.core_i.id_stage_i.imm_s_type),\n      .imm_sb_type      (cv32e40p_top_i.core_i.id_stage_i.imm_sb_type),\n      .imm_s2_type      (cv32e40p_top_i.core_i.id_stage_i.imm_s2_type),\n      .imm_s3_type      (cv32e40p_top_i.core_i.id_stage_i.imm_s3_type),\n      .imm_vs_type      (cv32e40p_top_i.core_i.id_stage_i.imm_vs_type),\n      .imm_vu_type      (cv32e40p_top_i.core_i.id_stage_i.imm_vu_type),\n      .imm_shuffle_type (cv32e40p_top_i.core_i.id_stage_i.imm_shuffle_type),\n      .imm_clip_type    (cv32e40p_top_i.core_i.id_stage_i.instr[11:7]),\n      .apu_en_i         (cv32e40p_top_i.apu_req),\n      .apu_singlecycle_i(cv32e40p_top_i.core_i.ex_stage_i.apu_singlecycle),\n      .apu_multicycle_i (cv32e40p_top_i.core_i.ex_stage_i.apu_multicycle),\n      .apu_rvalid_i     (cv32e40p_top_i.core_i.ex_stage_i.apu_valid)\n  );\n`endif\n\n`ifdef CV32E40P_RVFI\n  logic [1:0][31:0] hwlp_start_q;\n  logic [1:0][31:0] hwlp_end_q;\n  logic [1:0][31:0] hwlp_counter_q;\n  logic [1:0][31:0] hwlp_counter_n;\n  generate\n    if (COREV_PULP) begin\n      assign hwlp_start_q   = cv32e40p_top_i.core_i.id_stage_i.gen_hwloop_regs.hwloop_regs_i.hwlp_start_q  ;\n      assign hwlp_end_q = cv32e40p_top_i.core_i.id_stage_i.gen_hwloop_regs.hwloop_regs_i.hwlp_end_q;\n      assign hwlp_counter_q = cv32e40p_top_i.core_i.id_stage_i.gen_hwloop_regs.hwloop_regs_i.hwlp_counter_q;\n      assign hwlp_counter_n = cv32e40p_top_i.core_i.id_stage_i.gen_hwloop_regs.hwloop_regs_i.hwlp_counter_n;\n    end else begin\n      assign hwlp_start_q   = '0;\n      assign hwlp_end_q     = '0;\n      assign hwlp_counter_q = '0;\n      assign hwlp_counter_n = '0;\n    end\n  endgenerate\n\n  cv32e40p_rvfi #(\n      .FPU(FPU),\n      .ZFINX(ZFINX),\n      .NUM_MHPMCOUNTERS(NUM_MHPMCOUNTERS)\n  ) rvfi_i (\n      .clk_i (cv32e40p_top_i.core_i.clk_i),\n      .rst_ni(cv32e40p_top_i.core_i.rst_ni),\n\n      .is_decoding_i    (cv32e40p_top_i.core_i.id_stage_i.is_decoding_o),\n      .is_illegal_i     (cv32e40p_top_i.core_i.id_stage_i.illegal_insn_dec),\n      .trigger_match_i  (cv32e40p_top_i.core_i.id_stage_i.trigger_match_i),\n      .data_misaligned_i(cv32e40p_top_i.core_i.data_misaligned),\n      .lsu_data_we_ex_i (cv32e40p_top_i.core_i.data_we_ex),\n      .debug_mode_i     (cv32e40p_top_i.core_i.debug_mode),\n      .debug_cause_i    (cv32e40p_top_i.core_i.debug_cause),\n      //// Instr IF probes ////\n      .instr_req_i      (cv32e40p_top_i.core_i.instr_req_o),\n      .instr_grant_i    (cv32e40p_top_i.core_i.instr_gnt_i),\n      .instr_rvalid_i   (cv32e40p_top_i.core_i.instr_rvalid_i),\n      .prefetch_req_i   (cv32e40p_top_i.core_i.instr_req_int),\n      .pc_set_i         (cv32e40p_top_i.core_i.pc_set),\n\n      .instr_valid_id_i    (cv32e40p_top_i.core_i.instr_valid_id),\n      .instr_rdata_id_i    (cv32e40p_top_i.core_i.instr_rdata_id),\n      .is_fetch_failed_id_i(cv32e40p_top_i.core_i.is_fetch_failed_id),\n      .instr_req_int_i     (cv32e40p_top_i.core_i.instr_req_int),\n      .clear_instr_valid_i (cv32e40p_top_i.core_i.clear_instr_valid),\n      //// IF probes ////\n      .instr_valid_if_i    (cv32e40p_top_i.core_i.if_stage_i.instr_valid),\n      .if_valid_i          (cv32e40p_top_i.core_i.if_stage_i.if_valid),\n      .if_ready_i          (cv32e40p_top_i.core_i.if_stage_i.if_ready),\n      .instr_if_i          (cv32e40p_top_i.core_i.if_stage_i.instr_aligned),\n      .pc_if_i             (cv32e40p_top_i.core_i.pc_if),\n      //// ID probes ////\n      .pc_id_i             (cv32e40p_top_i.core_i.id_stage_i.pc_id_i),\n      .id_valid_i          (cv32e40p_top_i.core_i.id_stage_i.id_valid_o),\n      .id_ready_i          (cv32e40p_top_i.core_i.id_stage_i.id_ready_o),\n\n      .rs1_addr_id_i     (cv32e40p_top_i.core_i.id_stage_i.regfile_addr_ra_id),\n      .rs2_addr_id_i     (cv32e40p_top_i.core_i.id_stage_i.regfile_addr_rb_id),\n      .rs3_addr_id_i     (cv32e40p_top_i.core_i.id_stage_i.regfile_addr_rc_id),\n      .operand_a_fw_id_i (cv32e40p_top_i.core_i.id_stage_i.operand_a_fw_id),\n      .operand_b_fw_id_i (cv32e40p_top_i.core_i.id_stage_i.operand_b_fw_id),\n      .operand_c_fw_id_i (cv32e40p_top_i.core_i.id_stage_i.operand_c_fw_id),\n      // .instr         (cv32e40p_top_i.core_i.id_stage_i.instr     ),\n      .is_compressed_id_i(cv32e40p_top_i.core_i.id_stage_i.is_compressed_i),\n      .ebrk_insn_dec_i   (cv32e40p_top_i.core_i.id_stage_i.ebrk_insn_dec),\n      .ecall_insn_dec_i  (cv32e40p_top_i.core_i.id_stage_i.ecall_insn_dec),\n      .mret_insn_dec_i   (cv32e40p_top_i.core_i.id_stage_i.mret_insn_dec),\n      .mret_dec_i        (cv32e40p_top_i.core_i.id_stage_i.mret_dec),\n\n      .csr_cause_i     (cv32e40p_top_i.core_i.csr_cause),\n      .debug_csr_save_i(cv32e40p_top_i.core_i.debug_csr_save),\n\n      // HWLOOP regs\n      .hwlp_start_q_i  (hwlp_start_q),\n      .hwlp_end_q_i    (hwlp_end_q),\n      .hwlp_counter_q_i(hwlp_counter_q),\n      .hwlp_counter_n_i(hwlp_counter_n),\n\n      .minstret_i         (cv32e40p_top_i.core_i.id_stage_i.minstret),\n      //// EX probes ////\n      .ex_valid_i         (cv32e40p_top_i.core_i.ex_valid),\n      .ex_ready_i         (cv32e40p_top_i.core_i.ex_ready),\n      .ex_reg_addr_i      (cv32e40p_top_i.core_i.regfile_alu_waddr_fw),\n      .ex_reg_we_i        (cv32e40p_top_i.core_i.regfile_alu_we_fw),\n      .ex_reg_wdata_i     (cv32e40p_top_i.core_i.regfile_alu_wdata_fw),\n      .apu_en_ex_i        (cv32e40p_top_i.core_i.apu_en_ex),\n      .apu_singlecycle_i  (cv32e40p_top_i.core_i.ex_stage_i.apu_singlecycle),\n      .apu_multicycle_i   (cv32e40p_top_i.core_i.ex_stage_i.apu_multicycle),\n      .wb_contention_lsu_i(cv32e40p_top_i.core_i.ex_stage_i.wb_contention_lsu),\n      .wb_contention_i    (cv32e40p_top_i.core_i.ex_stage_i.wb_contention),\n      .regfile_we_lsu_i   (cv32e40p_top_i.core_i.ex_stage_i.regfile_we_lsu),\n      // .rf_we_alu_i    (cv32e40p_top_i.core_i.id_stage_i.regfile_alu_we_fw_i),\n      // .rf_addr_alu_i  (cv32e40p_top_i.core_i.id_stage_i.regfile_alu_waddr_fw_i),\n      // .rf_wdata_alu_i (cv32e40p_top_i.core_i.id_stage_i.regfile_alu_wdata_fw_i),\n\n      .mult_ready_i        (cv32e40p_top_i.core_i.ex_stage_i.mult_ready),\n      .alu_ready_i         (cv32e40p_top_i.core_i.ex_stage_i.alu_ready),\n      //// WB probes ////\n      .wb_valid_i          (cv32e40p_top_i.core_i.wb_valid),\n      .wb_ready_i          (cv32e40p_top_i.core_i.lsu_ready_wb),\n      //// LSU probes ////\n      .data_we_ex_i        (cv32e40p_top_i.core_i.data_we_ex),\n      .data_atop_ex_i      (cv32e40p_top_i.core_i.data_atop_ex),\n      .data_type_ex_i      (cv32e40p_top_i.core_i.data_type_ex),\n      .alu_operand_c_ex_i  (cv32e40p_top_i.core_i.alu_operand_c_ex),\n      .data_reg_offset_ex_i(cv32e40p_top_i.core_i.data_reg_offset_ex),\n      .data_load_event_ex_i(cv32e40p_top_i.core_i.data_load_event_ex),\n      .data_sign_ext_ex_i  (cv32e40p_top_i.core_i.data_sign_ext_ex),\n      .lsu_rdata_i         (cv32e40p_top_i.core_i.lsu_rdata),\n      .data_req_ex_i       (cv32e40p_top_i.core_i.data_req_ex),\n      .alu_operand_a_ex_i  (cv32e40p_top_i.core_i.alu_operand_a_ex),\n      .alu_operand_b_ex_i  (cv32e40p_top_i.core_i.alu_operand_b_ex),\n      .useincr_addr_ex_i   (cv32e40p_top_i.core_i.useincr_addr_ex),\n      .data_misaligned_ex_i(cv32e40p_top_i.core_i.data_misaligned_ex),\n      .p_elw_start_i       (cv32e40p_top_i.core_i.p_elw_start),\n      .p_elw_finish_i      (cv32e40p_top_i.core_i.p_elw_finish),\n      .lsu_ready_ex_i      (cv32e40p_top_i.core_i.lsu_ready_ex),\n      .lsu_ready_wb_i      (cv32e40p_top_i.core_i.lsu_ready_wb),\n\n      .lsu_data_be_i(cv32e40p_top_i.core_i.load_store_unit_i.data_be),\n\n      .data_req_pmp_i(cv32e40p_top_i.core_i.data_req_pmp),\n      .data_gnt_pmp_i(cv32e40p_top_i.core_i.data_gnt_pmp),\n      .data_rvalid_i(cv32e40p_top_i.core_i.data_rvalid_i),\n      .data_err_pmp_i(cv32e40p_top_i.core_i.data_err_pmp),\n      .data_addr_pmp_i(cv32e40p_top_i.core_i.data_addr_pmp),\n      .data_we_i(cv32e40p_top_i.core_i.data_we_o),\n      .data_atop_i(cv32e40p_top_i.core_i.data_atop_o),\n      .data_be_i(cv32e40p_top_i.core_i.data_be_o),\n      .data_wdata_i(cv32e40p_top_i.core_i.data_wdata_o),\n      .data_rdata_i(cv32e40p_top_i.core_i.data_rdata_i),\n      // Register writes\n      .rf_we_wb_i(cv32e40p_top_i.core_i.id_stage_i.regfile_we_wb_i),\n      .rf_addr_wb_i(cv32e40p_top_i.core_i.id_stage_i.regfile_waddr_wb_i),\n      .rf_wdata_wb_i(cv32e40p_top_i.core_i.id_stage_i.regfile_wdata_wb_i),\n      .regfile_alu_we_ex_i(cv32e40p_top_i.core_i.id_stage_i.regfile_alu_we_ex_o),\n\n      // APU\n      .apu_req_i   (cv32e40p_top_i.core_i.apu_req_o),\n      .apu_gnt_i   (cv32e40p_top_i.core_i.apu_gnt_i),\n      .apu_rvalid_i(cv32e40p_top_i.core_i.ex_stage_i.apu_valid),\n\n      // Controller FSM probes\n      .ctrl_fsm_cs_i(cv32e40p_top_i.core_i.id_stage_i.controller_i.ctrl_fsm_cs),\n      .pc_mux_i     (cv32e40p_top_i.core_i.id_stage_i.controller_i.pc_mux_o),\n      .exc_pc_mux_i (cv32e40p_top_i.core_i.id_stage_i.controller_i.exc_pc_mux_o),\n\n      //CSR\n      .csr_addr_i     (cv32e40p_top_i.core_i.cs_registers_i.csr_addr_i),\n      .csr_we_i       (cv32e40p_top_i.core_i.cs_registers_i.csr_we_int),\n      .csr_wdata_int_i(cv32e40p_top_i.core_i.cs_registers_i.csr_wdata_int),\n\n      .csr_fregs_we_i(cv32e40p_top_i.core_i.cs_registers_i.fregs_we_i),\n\n      .csr_mstatus_n_i   (cv32e40p_top_i.core_i.cs_registers_i.mstatus_n),\n      .csr_mstatus_q_i   (cv32e40p_top_i.core_i.cs_registers_i.mstatus_q),\n      .csr_mstatus_fs_n_i(cv32e40p_top_i.core_i.cs_registers_i.mstatus_fs_n),\n      .csr_mstatus_fs_q_i(cv32e40p_top_i.core_i.cs_registers_i.mstatus_fs_q),\n\n      .csr_misa_n_i(cv32e40p_top_i.core_i.cs_registers_i.MISA_VALUE),  // WARL\n      .csr_misa_q_i(cv32e40p_top_i.core_i.cs_registers_i.MISA_VALUE),\n\n      .csr_tdata1_n_i           (cv32e40p_top_i.core_i.cs_registers_i.tmatch_control_rdata),//csr_wdata_int                                   ),\n      .csr_tdata1_q_i           (cv32e40p_top_i.core_i.cs_registers_i.tmatch_control_rdata),//gen_trigger_regs.tmatch_control_exec_q          ),\n      .csr_tdata1_we_i(cv32e40p_top_i.core_i.cs_registers_i.gen_trigger_regs.tmatch_control_we),\n\n      .csr_tdata2_n_i           (cv32e40p_top_i.core_i.cs_registers_i.tmatch_value_rdata),//csr_wdata_int                                   ),\n      .csr_tdata2_q_i           (cv32e40p_top_i.core_i.cs_registers_i.tmatch_value_rdata),//gen_trigger_regs.tmatch_control_exec_q          ),\n      .csr_tdata2_we_i(cv32e40p_top_i.core_i.cs_registers_i.gen_trigger_regs.tmatch_value_we),\n\n      .csr_tinfo_n_i({16'h0, cv32e40p_top_i.core_i.cs_registers_i.tinfo_types}),\n      .csr_tinfo_q_i({16'h0, cv32e40p_top_i.core_i.cs_registers_i.tinfo_types}),\n\n      .csr_mie_n_i       (cv32e40p_top_i.core_i.cs_registers_i.mie_n),\n      .csr_mie_q_i       (cv32e40p_top_i.core_i.cs_registers_i.mie_q),\n      .csr_mie_we_i      (cv32e40p_top_i.core_i.cs_registers_i.csr_mie_we),\n      .csr_mtvec_n_i     (cv32e40p_top_i.core_i.cs_registers_i.mtvec_n),\n      .csr_mtvec_q_i     (cv32e40p_top_i.core_i.cs_registers_i.mtvec_q),\n      .csr_mtvec_mode_n_i(cv32e40p_top_i.core_i.cs_registers_i.mtvec_mode_n),\n      .csr_mtvec_mode_q_i(cv32e40p_top_i.core_i.cs_registers_i.mtvec_mode_q),\n\n      .csr_mcountinhibit_q_i (cv32e40p_top_i.core_i.cs_registers_i.mcountinhibit_q),\n      .csr_mcountinhibit_n_i (cv32e40p_top_i.core_i.cs_registers_i.mcountinhibit_n),\n      .csr_mcountinhibit_we_i(cv32e40p_top_i.core_i.cs_registers_i.mcountinhibit_we),\n\n      .csr_mhpmevent_n_i(cv32e40p_top_i.core_i.cs_registers_i.mhpmevent_n),\n      .csr_mhpmevent_q_i(cv32e40p_top_i.core_i.cs_registers_i.mhpmevent_q),\n      .csr_mhpmevent_we_i(cv32e40p_top_i.core_i.cs_registers_i.mhpmevent_we),\n      .csr_mscratch_q_i(cv32e40p_top_i.core_i.cs_registers_i.mscratch_q),\n      .csr_mscratch_n_i(cv32e40p_top_i.core_i.cs_registers_i.mscratch_n),\n      .csr_mepc_q_i(cv32e40p_top_i.core_i.cs_registers_i.mepc_q),\n      .csr_mepc_n_i(cv32e40p_top_i.core_i.cs_registers_i.mepc_n),\n      .csr_mcause_q_i(cv32e40p_top_i.core_i.cs_registers_i.mcause_q),\n      .csr_mcause_n_i(cv32e40p_top_i.core_i.cs_registers_i.mcause_n),\n      .csr_mip_n_i(cv32e40p_top_i.core_i.cs_registers_i.mip),\n      .csr_mip_q_i(cv32e40p_top_i.core_i.cs_registers_i.mip),\n      .csr_mip_we_i('0),  //(cv32e40p_top_i.core_i.cs_registers_i.mip)\n\n\n      .csr_dcsr_q_i(cv32e40p_top_i.core_i.cs_registers_i.dcsr_q),\n      .csr_dcsr_n_i(cv32e40p_top_i.core_i.cs_registers_i.dcsr_n),\n\n      .csr_dpc_n_i(cv32e40p_top_i.core_i.cs_registers_i.depc_n),\n      .csr_dpc_q_i(cv32e40p_top_i.core_i.cs_registers_i.depc_q),\n      .csr_dpc_we_i('0),  //cv32e40p_top_i.core_i.cs_registers_i.),\n      .csr_dscratch0_n_i(cv32e40p_top_i.core_i.cs_registers_i.dscratch0_n),\n      .csr_dscratch0_q_i(cv32e40p_top_i.core_i.cs_registers_i.dscratch0_q),\n      .csr_dscratch0_we_i('0),  //cv32e40p_top_i.core_i.cs_registers_i.),\n\n      .csr_dscratch1_n_i(cv32e40p_top_i.core_i.cs_registers_i.dscratch1_n),\n      .csr_dscratch1_q_i(cv32e40p_top_i.core_i.cs_registers_i.dscratch1_q),\n      .csr_dscratch1_we_i('0),  //cv32e40p_top_i.core_i.cs_registers_i.),\n\n      .csr_mhpmcounter_q_i          (cv32e40p_top_i.core_i.cs_registers_i.mhpmcounter_q),\n      .csr_mhpmcounter_write_lower_i(cv32e40p_top_i.core_i.cs_registers_i.mhpmcounter_write_lower),\n      .csr_mhpmcounter_write_upper_i(cv32e40p_top_i.core_i.cs_registers_i.mhpmcounter_write_upper),\n\n      .csr_mvendorid_i({\n        MVENDORID_BANK, MVENDORID_OFFSET\n      }),  //TODO: get this from the design instead of the pkg\n      .csr_marchid_i(MARCHID),  //TODO: get this from the design instead of the pkg\n\n      .csr_fcsr_fflags_n_i (cv32e40p_top_i.core_i.cs_registers_i.fflags_n),\n      .csr_fcsr_fflags_q_i (cv32e40p_top_i.core_i.cs_registers_i.fflags_q),\n      .csr_fcsr_fflags_we_i(cv32e40p_top_i.core_i.cs_registers_i.fflags_we_i),\n      .csr_fcsr_frm_n_i    (cv32e40p_top_i.core_i.cs_registers_i.frm_n),\n      .csr_fcsr_frm_q_i    (cv32e40p_top_i.core_i.cs_registers_i.frm_q)\n  );\n`endif\n\n`ifdef CV32E40P_RVFI_TRACE_EXECUTION\n  bind cv32e40p_rvfi: rvfi_i cv32e40p_rvfi_trace #(\n      .FPU  (FPU),\n      .ZFINX(ZFINX)\n  ) cv32e40p_tracer_i (\n      .clk_i(clk_i),\n      .rst_ni(rst_ni),\n      .hart_id_i(cv32e40p_top_i.core_i.hart_id_i),\n\n      .imm_s3_type(cv32e40p_top_i.core_i.id_stage_i.imm_s3_type),\n\n      .rvfi_valid(rvfi_valid),\n      .rvfi_insn(rvfi_insn),\n      .rvfi_start_cycle(rvfi_start_cycle),\n      .rvfi_start_time(rvfi_start_time),\n      .rvfi_stop_cycle(rvfi_stop_cycle),\n      .rvfi_stop_time(rvfi_stop_time),\n      .rvfi_pc_rdata(rvfi_pc_rdata),\n      .rvfi_trap(rvfi_trap),\n      .rvfi_rd_addr(rvfi_rd_addr),\n      .rvfi_rd_wdata(rvfi_rd_wdata),\n      .rvfi_frd_wvalid(rvfi_frd_wvalid),\n      .rvfi_frd_addr(rvfi_frd_addr),\n      .rvfi_frd_wdata(rvfi_frd_wdata),\n      .rvfi_2_rd(rvfi_2_rd),\n      .rvfi_rs1_addr(rvfi_rs1_addr),\n      .rvfi_rs2_addr(rvfi_rs2_addr),\n      .rvfi_rs3_addr(rvfi_rs3_addr),\n      .rvfi_rs1_rdata(rvfi_rs1_rdata),\n      .rvfi_rs2_rdata(rvfi_rs2_rdata),\n      .rvfi_rs3_rdata(rvfi_rs3_rdata),\n      .rvfi_frs1_addr(rvfi_frs1_addr),\n      .rvfi_frs2_addr(rvfi_frs2_addr),\n      .rvfi_frs3_addr(rvfi_frs3_addr),\n      .rvfi_frs1_rvalid(rvfi_frs1_rvalid),\n      .rvfi_frs2_rvalid(rvfi_frs2_rvalid),\n      .rvfi_frs3_rvalid(rvfi_frs3_rvalid),\n      .rvfi_frs1_rdata(rvfi_frs1_rdata),\n      .rvfi_frs2_rdata(rvfi_frs2_rdata),\n      .rvfi_frs3_rdata(rvfi_frs3_rdata),\n      .rvfi_mem_addr(rvfi_mem_addr),\n      .rvfi_mem_rmask(rvfi_mem_rmask),\n      .rvfi_mem_wmask(rvfi_mem_wmask),\n      .rvfi_mem_rdata(rvfi_mem_rdata),\n      .rvfi_mem_wdata(rvfi_mem_wdata)\n  );\n`endif\n  // Instantiate the Core and the optinal FPU\n  cv32e40p_top #(\n      .COREV_PULP      (COREV_PULP),\n      .COREV_CLUSTER   (COREV_CLUSTER),\n      .FPU             (FPU),\n      .FPU_ADDMUL_LAT  (FPU_ADDMUL_LAT),\n      .FPU_OTHERS_LAT  (FPU_OTHERS_LAT),\n      .ZFINX           (ZFINX),\n      .NUM_MHPMCOUNTERS(NUM_MHPMCOUNTERS)\n  ) cv32e40p_top_i (\n      .clk_i (clk_i),\n      .rst_ni(rst_ni),\n\n      .pulp_clock_en_i(pulp_clock_en_i),\n      .scan_cg_en_i   (scan_cg_en_i),\n\n      .boot_addr_i        (boot_addr_i),\n      .mtvec_addr_i       (mtvec_addr_i),\n      .dm_halt_addr_i     (dm_halt_addr_i),\n      .hart_id_i          (hart_id_i),\n      .dm_exception_addr_i(dm_exception_addr_i),\n\n      .instr_req_o   (instr_req_o),\n      .instr_gnt_i   (instr_gnt_i),\n      .instr_rvalid_i(instr_rvalid_i),\n      .instr_addr_o  (instr_addr_o),\n      .instr_rdata_i (instr_rdata_i),\n\n      .data_req_o   (data_req_o),\n      .data_gnt_i   (data_gnt_i),\n      .data_rvalid_i(data_rvalid_i),\n      .data_we_o    (data_we_o),\n      .data_be_o    (data_be_o),\n      .data_addr_o  (data_addr_o),\n      .data_wdata_o (data_wdata_o),\n      .data_rdata_i (data_rdata_i),\n\n      .irq_i    (irq_i),\n      .irq_ack_o(irq_ack_o),\n      .irq_id_o (irq_id_o),\n\n      .debug_req_i      (debug_req_i),\n      .debug_havereset_o(debug_havereset_o),\n      .debug_running_o  (debug_running_o),\n      .debug_halted_o   (debug_halted_o),\n\n      .fetch_enable_i(fetch_enable_i),\n      .core_sleep_o  (core_sleep_o)\n  );\n\nendmodule\n","lang":"verilog"};
processSrcData(g_data);