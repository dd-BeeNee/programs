var g_data = {"name":"/shark0/processing/cv32e40p/users/processing/PRODUCTS_DIGITAL_DESIGN/PANTHER/PANTHER_1.0/CV32/NR/CFG_P_Z0/NR_QUESTA_INT_DEBUG_LONG/workdir/lib/uvm_agents/uvma_obi_memory/src/uvma_obi_memory_pkg.sv","src":"// \n// Copyright 2021 OpenHW Group\n// Copyright 2021 Datum Technology Corporation\n// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1\n// \n// Licensed under the Solderpad Hardware License v 2.1 (the \"License\"); you may\n// not use this file except in compliance with the License, or, at your option,\n// the Apache License version 2.0. You may obtain a copy of the License at\n// \n//     https://solderpad.org/licenses/SHL-2.1/\n// \n// Unless required by applicable law or agreed to in writing, any work\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations\n// under the License.\n// \n\n\n`ifndef __UVMA_OBI_MEMORY_PKG_SV__\n`define __UVMA_OBI_MEMORY_PKG_SV__\n\n\n// Pre-processor macros\n`include \"uvm_macros.svh\"\n`include \"uvml_hrtbt_macros.sv\"\n`include \"uvma_obi_memory_macros.sv\"\n\n// Interfaces / Modules / Checkers\n`include \"uvma_obi_memory_if.sv\"\n`include \"uvma_obi_memory_assert.sv\"\n`include \"uvma_obi_memory_1p2_assert.sv\"\n`include \"uvma_obi_memory_assert_if_wrp.sv\"\n`ifdef UVMA_OBI_MEMORY_INC_IF_CHKR\n`include \"uvma_obi_memory_if_chkr.sv\"\n`endif\n\n\n/**\n * Encapsulates all the types needed for an UVM agent capable of driving and/or\n * monitoring Open Bus Interface.\n */\npackage uvma_obi_memory_pkg;\n   \n   import uvm_pkg       ::*;\n   import uvml_hrtbt_pkg::*;\n   import uvml_trn_pkg  ::*;\n   import uvml_logs_pkg ::*;\n   import uvml_mem_pkg  ::*;\n   \n   // Constants / Structs / Enums\n   `include \"uvma_obi_memory_constants.sv\"\n   `include \"uvma_obi_memory_tdefs.sv\"\n   \n   // Objects\n   `include \"uvma_obi_memory_cfg.sv\"\n   `include \"uvma_obi_memory_cntxt.sv\"\n   \n   // High-level transactions\n   `include \"uvma_obi_memory_mon_trn.sv\"\n   `include \"uvma_obi_memory_base_seq_item.sv\"\n   `include \"uvma_obi_memory_mstr_seq_item.sv\"\n   `include \"uvma_obi_memory_slv_seq_item.sv\"\n   \n   // Agent componentsmemory_\n   `include \"uvma_obi_memory_cov_model.sv\"\n   `include \"uvma_obi_memory_drv.sv\"\n   `include \"uvma_obi_memory_mon.sv\"\n   `include \"uvma_obi_memory_sqr.sv\"\n   `include \"uvma_obi_memory_mon_trn_logger.sv\"\n   `include \"uvma_obi_memory_seq_item_logger.sv\"\n   `include \"uvma_obi_memory_agent.sv\"\n   \n   // Sequences\n   `include \"uvma_obi_memory_seq_lib.sv\"\n   \n   // Misc.\n   //`include \"uvma_obi_memory_reg_adapter.sv\"\n   \nendpackage : uvma_obi_memory_pkg\n\n\n`endif // __UVMA_OBI_MEMORY_PKG_SV__\n","lang":"verilog"};
processSrcData(g_data);