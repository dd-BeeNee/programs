var g_data = {"name":"/shark0/processing/cv32e40p/users/processing/PRODUCTS_DIGITAL_DESIGN/PANTHER/PANTHER_1.0/CV32/NR/CFG_P_F0/NR_QUESTA_INT_DEBUG_LONG/workdir/core-v-cores/cv32e40p/rtl/../bhv/cv32e40p_sim_clock_gate.sv","src":"// Copyright 2017 ETH Zurich and University of Bologna.\n// Copyright and related rights are licensed under the Solderpad Hardware\n// License, Version 0.51 (the \"License\"); you may not use this file except in\n// compliance with the License.  You may obtain a copy of the License at\n// http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law\n// or agreed to in writing, software, hardware and materials distributed under\n// this License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\n// specific language governing permissions and limitations under the License.\n\n// !!! cv32e40p_sim_clock_gate file is meant for simulation only !!!\n// !!! It must not be used for ASIC synthesis                    !!!\n// !!! It must not be used for FPGA synthesis                    !!!\n\nmodule cv32e40p_clock_gate (\n    input  logic clk_i,\n    input  logic en_i,\n    input  logic scan_cg_en_i,\n    output logic clk_o\n);\n\n  logic clk_en;\n\n  always_latch begin\n    if (clk_i == 1'b0) clk_en <= en_i | scan_cg_en_i;\n  end\n\n  assign clk_o = clk_i & clk_en;\n\nendmodule  // cv32e40p_clock_gate\n","lang":"verilog"};
processSrcData(g_data);