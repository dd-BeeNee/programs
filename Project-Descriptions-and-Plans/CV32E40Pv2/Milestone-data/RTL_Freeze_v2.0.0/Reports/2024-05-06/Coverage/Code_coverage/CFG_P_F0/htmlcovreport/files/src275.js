var g_data = {"name":"/shark0/processing/cv32e40p/users/processing/PRODUCTS_DIGITAL_DESIGN/PANTHER/PANTHER_1.0/CV32/NR/CFG_P_F0/NR_QUESTA_INT_DEBUG_LONG/workdir/core-v-cores/cv32e40p/rtl/vendor/pulp_platform_fpnew/vendor/opene906/E906_RTL_FACTORY/gen_rtl/fdsu/rtl/pa_fdsu_pack_single.v","src":"/*Copyright 2020-2021 T-Head Semiconductor Co., Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n// &ModuleBeg; @23\nmodule pa_fdsu_pack_single(\n  fdsu_ex4_denorm_to_tiny_frac,\n  fdsu_ex4_frac,\n  fdsu_ex4_nx,\n  fdsu_ex4_potnt_norm,\n  fdsu_ex4_result_nor,\n  fdsu_frbus_data,\n  fdsu_frbus_fflags,\n  fdsu_frbus_freg,\n  fdsu_yy_expnt_rst,\n  fdsu_yy_of,\n  fdsu_yy_of_rm_lfn,\n  fdsu_yy_potnt_of,\n  fdsu_yy_potnt_uf,\n  fdsu_yy_result_inf,\n  fdsu_yy_result_lfn,\n  fdsu_yy_result_sign,\n  fdsu_yy_rslt_denorm,\n  fdsu_yy_uf,\n  fdsu_yy_wb_freg\n);\n\n// &Ports; @24\ninput           fdsu_ex4_denorm_to_tiny_frac; \ninput   [25:0]  fdsu_ex4_frac;               \ninput           fdsu_ex4_nx;                 \ninput   [1 :0]  fdsu_ex4_potnt_norm;         \ninput           fdsu_ex4_result_nor;         \ninput   [9 :0]  fdsu_yy_expnt_rst;           \ninput           fdsu_yy_of;                  \ninput           fdsu_yy_of_rm_lfn;           \ninput           fdsu_yy_potnt_of;            \ninput           fdsu_yy_potnt_uf;            \ninput           fdsu_yy_result_inf;          \ninput           fdsu_yy_result_lfn;          \ninput           fdsu_yy_result_sign;         \ninput           fdsu_yy_rslt_denorm;         \ninput           fdsu_yy_uf;                  \ninput   [4 :0]  fdsu_yy_wb_freg;             \noutput  [31:0]  fdsu_frbus_data;             \noutput  [4 :0]  fdsu_frbus_fflags;           \noutput  [4 :0]  fdsu_frbus_freg;             \n\n// &Regs; @25\nreg     [22:0]  ex4_frac_23;                 \nreg     [31:0]  ex4_result;                  \nreg     [22:0]  ex4_single_denorm_frac;      \nreg     [9 :0]  expnt_add_op1;               \n\n// &Wires; @26\nwire            ex4_cor_nx;                  \nwire            ex4_cor_uf;                  \nwire            ex4_denorm_potnt_norm;       \nwire    [31:0]  ex4_denorm_result;           \nwire    [9 :0]  ex4_expnt_rst;               \nwire    [4 :0]  ex4_expt;                    \nwire            ex4_final_rst_norm;          \nwire    [25:0]  ex4_frac;                    \nwire            ex4_of_plus;                 \nwire            ex4_result_inf;              \nwire            ex4_result_lfn;              \nwire            ex4_rslt_denorm;             \nwire    [31:0]  ex4_rst_inf;                 \nwire    [31:0]  ex4_rst_lfn;                 \nwire            ex4_rst_nor;                 \nwire    [31:0]  ex4_rst_norm;                \nwire            ex4_uf_plus;                 \nwire            fdsu_ex4_denorm_to_tiny_frac; \nwire            fdsu_ex4_dz;                 \nwire    [9 :0]  fdsu_ex4_expnt_rst;          \nwire    [25:0]  fdsu_ex4_frac;               \nwire            fdsu_ex4_nv;                 \nwire            fdsu_ex4_nx;                 \nwire            fdsu_ex4_of;                 \nwire            fdsu_ex4_of_rst_lfn;         \nwire    [1 :0]  fdsu_ex4_potnt_norm;         \nwire            fdsu_ex4_potnt_of;           \nwire            fdsu_ex4_potnt_uf;           \nwire            fdsu_ex4_result_inf;         \nwire            fdsu_ex4_result_lfn;         \nwire            fdsu_ex4_result_nor;         \nwire            fdsu_ex4_result_sign;        \nwire            fdsu_ex4_rslt_denorm;        \nwire            fdsu_ex4_uf;                 \nwire    [31:0]  fdsu_frbus_data;             \nwire    [4 :0]  fdsu_frbus_fflags;           \nwire    [4 :0]  fdsu_frbus_freg;             \nwire    [9 :0]  fdsu_yy_expnt_rst;           \nwire            fdsu_yy_of;                  \nwire            fdsu_yy_of_rm_lfn;           \nwire            fdsu_yy_potnt_of;            \nwire            fdsu_yy_potnt_uf;            \nwire            fdsu_yy_result_inf;          \nwire            fdsu_yy_result_lfn;          \nwire            fdsu_yy_result_sign;         \nwire            fdsu_yy_rslt_denorm;         \nwire            fdsu_yy_uf;                  \nwire    [4 :0]  fdsu_yy_wb_freg;             \n\n\nassign fdsu_ex4_result_sign     = fdsu_yy_result_sign;\nassign fdsu_ex4_of_rst_lfn      = fdsu_yy_of_rm_lfn;\nassign fdsu_ex4_result_inf      = fdsu_yy_result_inf;\nassign fdsu_ex4_result_lfn      = fdsu_yy_result_lfn;\nassign fdsu_ex4_of              = fdsu_yy_of;\nassign fdsu_ex4_uf              = fdsu_yy_uf;\nassign fdsu_ex4_potnt_of        = fdsu_yy_potnt_of;\nassign fdsu_ex4_potnt_uf        = fdsu_yy_potnt_uf;\nassign fdsu_ex4_nv              = 1'b0;\nassign fdsu_ex4_dz              = 1'b0;\nassign fdsu_ex4_expnt_rst[9:0] = fdsu_yy_expnt_rst[9:0];\nassign fdsu_ex4_rslt_denorm     = fdsu_yy_rslt_denorm;\n//============================EX4 STAGE=====================\nassign ex4_frac[25:0] = fdsu_ex4_frac[25:0];\n//exponent adder\n// &CombBeg; @43\nalways @( ex4_frac[25:24])\nbegin\ncasez(ex4_frac[25:24])\n  2'b00   : expnt_add_op1[9:0] = 10'h1ff;  //the expnt sub 1\n  2'b01   : expnt_add_op1[9:0] = 10'h0;    //the expnt stay the origi\n  2'b1?   : expnt_add_op1[9:0] = 10'h1;    // the exptn add 1\n  default : expnt_add_op1[9:0] = 10'b0;  \nendcase\n// &CombEnd; @50\nend\nassign ex4_expnt_rst[9:0] = fdsu_ex4_expnt_rst[9:0] + \n                             expnt_add_op1[9:0];\n\n//==========================Result Pack=====================\n\n// result denormal pack \n// shift to the denormal number\n// &CombBeg; @58\nalways @( fdsu_ex4_expnt_rst[9:0]\n       or fdsu_ex4_denorm_to_tiny_frac\n       or ex4_frac[25:1])\nbegin\ncase(fdsu_ex4_expnt_rst[9:0])\n  10'h1:   ex4_single_denorm_frac[22:0] = {      ex4_frac[23:1]}; //-1022 1\n  10'h0:   ex4_single_denorm_frac[22:0] = {      ex4_frac[24:2]}; //-1023 0\n  10'h3ff:ex4_single_denorm_frac[22:0] = {      ex4_frac[25:3]}; //-1024 -1\n  10'h3fe:ex4_single_denorm_frac[22:0] = {1'b0, ex4_frac[25:4]}; //-1025 -2\n  10'h3fd:ex4_single_denorm_frac[22:0] = {2'b0, ex4_frac[25:5]}; //-1026 -3\n  10'h3fc:ex4_single_denorm_frac[22:0] = {3'b0, ex4_frac[25:6]}; //-1027 -4\n  10'h3fb:ex4_single_denorm_frac[22:0] = {4'b0, ex4_frac[25:7]}; //-1028 -5\n  10'h3fa:ex4_single_denorm_frac[22:0] = {5'b0, ex4_frac[25:8]}; //-1029 -6\n  10'h3f9:ex4_single_denorm_frac[22:0] = {6'b0, ex4_frac[25:9]}; //-1030 -7\n  10'h3f8:ex4_single_denorm_frac[22:0] = {7'b0, ex4_frac[25:10]}; //-1031 -8\n  10'h3f7:ex4_single_denorm_frac[22:0] = {8'b0, ex4_frac[25:11]}; //-1032 -9\n  10'h3f6:ex4_single_denorm_frac[22:0] = {9'b0, ex4_frac[25:12]}; //-1033 -10\n  10'h3f5:ex4_single_denorm_frac[22:0] = {10'b0,ex4_frac[25:13]}; //-1034 -11\n  10'h3f4:ex4_single_denorm_frac[22:0] = {11'b0,ex4_frac[25:14]}; //-1035 -12\n  10'h3f3:ex4_single_denorm_frac[22:0] = {12'b0,ex4_frac[25:15]}; //-1036 -13  \n  10'h3f2:ex4_single_denorm_frac[22:0] = {13'b0,ex4_frac[25:16]}; // -1037\n  10'h3f1:ex4_single_denorm_frac[22:0] = {14'b0,ex4_frac[25:17]}; //-1038\n  10'h3f0:ex4_single_denorm_frac[22:0] = {15'b0,ex4_frac[25:18]}; //-1039\n  10'h3ef:ex4_single_denorm_frac[22:0] = {16'b0,ex4_frac[25:19]}; //-1040\n  10'h3ee:ex4_single_denorm_frac[22:0] = {17'b0,ex4_frac[25:20]}; //-1041\n  10'h3ed:ex4_single_denorm_frac[22:0] = {18'b0,ex4_frac[25:21]}; //-1042\n  10'h3ec:ex4_single_denorm_frac[22:0] = {19'b0,ex4_frac[25:22]}; //-1043\n  10'h3eb:ex4_single_denorm_frac[22:0] = {20'b0,ex4_frac[25:23]}; //-1044\n  10'h3ea:ex4_single_denorm_frac[22:0] = {21'b0,ex4_frac[25:24]}; //-1044\n  default :ex4_single_denorm_frac[22:0] = fdsu_ex4_denorm_to_tiny_frac ? 23'b1 : 23'b0; //-1045\nendcase                                                                  \n// &CombEnd; @86\nend\n//here when denormal number round to add1, it will become normal number\nassign ex4_denorm_potnt_norm    = (fdsu_ex4_potnt_norm[1] && ex4_frac[24]) || \n                                  (fdsu_ex4_potnt_norm[0] && ex4_frac[25]) ;\nassign ex4_rslt_denorm          = fdsu_ex4_rslt_denorm && !ex4_denorm_potnt_norm;\nassign ex4_denorm_result[31:0]  = {fdsu_ex4_result_sign,\n                                        8'h0,ex4_single_denorm_frac[22:0]};\n                                   \n                                                              \n//ex4 overflow/underflow plus                                 \nassign ex4_rst_nor = fdsu_ex4_result_nor;                    \nassign ex4_of_plus = fdsu_ex4_potnt_of  && \n                     (|ex4_frac[25:24])  && \n                     ex4_rst_nor;\nassign ex4_uf_plus = fdsu_ex4_potnt_uf  && \n                     (~|ex4_frac[25:24]) && \n                     ex4_rst_nor;\n//ex4 overflow round result\nassign ex4_result_lfn = (ex4_of_plus &&  fdsu_ex4_of_rst_lfn) ||\n                        fdsu_ex4_result_lfn;\nassign ex4_result_inf = (ex4_of_plus && !fdsu_ex4_of_rst_lfn) ||\n                        fdsu_ex4_result_inf;\n//Special Result Form\n// result largest finity number\nassign ex4_rst_lfn[31:0]      = {fdsu_ex4_result_sign,8'hfe,{23{1'b1}}};\n//result infinity\nassign ex4_rst_inf[31:0]  = {fdsu_ex4_result_sign,8'hff,23'b0};\n//result normal\n// &CombBeg; @114\nalways @( ex4_frac[25:0])\nbegin\ncasez(ex4_frac[25:24])\n  2'b00   : ex4_frac_23[22:0]  = ex4_frac[22:0];\n  2'b01   : ex4_frac_23[22:0]  = ex4_frac[23:1];\n  2'b1?   : ex4_frac_23[22:0]  = ex4_frac[24:2];\n  default : ex4_frac_23[22:0]  = 23'b0;\nendcase\n// &CombEnd; @121\nend\nassign ex4_rst_norm[31:0] = {fdsu_ex4_result_sign,\n                                  ex4_expnt_rst[7:0],\n                                  ex4_frac_23[22:0]};\nassign ex4_cor_uf            = (fdsu_ex4_uf || ex4_denorm_potnt_norm || ex4_uf_plus)\n                               && fdsu_ex4_nx;\nassign ex4_cor_nx            =  fdsu_ex4_nx \n                                || fdsu_ex4_of \n                                || ex4_of_plus;\n                                        \nassign ex4_expt[4:0]           = {\n                                  fdsu_ex4_nv,\n                                  fdsu_ex4_dz,\n                                  fdsu_ex4_of | ex4_of_plus,\n                                  ex4_cor_uf,\n                                  ex4_cor_nx};\n\nassign ex4_final_rst_norm      = !ex4_result_inf        &&\n                                 !ex4_result_lfn        && \n                                 !ex4_rslt_denorm; \n// &CombBeg; @141\nalways @( ex4_denorm_result[31:0]\n       or ex4_result_lfn\n       or ex4_result_inf\n       or ex4_final_rst_norm\n       or ex4_rst_norm[31:0]\n       or ex4_rst_lfn[31:0]\n       or ex4_rst_inf[31:0]\n       or ex4_rslt_denorm)\nbegin\ncase({ex4_rslt_denorm,\n      ex4_result_inf,\n      ex4_result_lfn,\n      ex4_final_rst_norm})\n  4'b1000 : ex4_result[31:0]  = ex4_denorm_result[31:0];\n  4'b0100 : ex4_result[31:0]  = ex4_rst_inf[31:0];\n  4'b0010 : ex4_result[31:0]  = ex4_rst_lfn[31:0];\n  4'b0001 : ex4_result[31:0]  = ex4_rst_norm[31:0];\n  default   : ex4_result[31:0]  = 32'b0;\nendcase\n// &CombEnd; @152\nend\n\n//==========================================================\n//                     Result Generate\n//==========================================================\nassign fdsu_frbus_freg[4:0]   = fdsu_yy_wb_freg[4:0];\nassign fdsu_frbus_data[31:0]  = ex4_result[31:0];\nassign fdsu_frbus_fflags[4:0] = ex4_expt[4:0];\n\n// &ModuleEnd; @161\nendmodule\n\n\n\n","lang":"verilog"};
processSrcData(g_data);